
// Autogenerated file
#ifndef GIG_KEYVAL_H
#define GIG_KEYVAL_H

#include <stdbool.h>
#include <stdint.h>
#include "gig_function.h"

typedef void (* FunctionInfoTableKeyFreeFunc)(GIFunctionInfo * x);
typedef void (* FunctionInfoTableValFreeFunc)(GigFunction * x);

typedef struct _FunctionInfoItem
{
    GIFunctionInfo * key;
    GigFunction * val;
} FunctionInfoItem;

typedef struct _FunctionInfoTable
{
    FunctionInfoItem *entries;
    int len;
    int alloc;
} FunctionInfoTable;

FunctionInfoTable *function_cache_new(void);
GigFunction * function_cache_find_entry(FunctionInfoTable *kv, GIFunctionInfo * key);
void function_cache_add_entry(FunctionInfoTable *kv, GIFunctionInfo * key, GigFunction * val);
void function_cache_free(FunctionInfoTable *kv, FunctionInfoTableKeyFreeFunc keyfree, FunctionInfoTableValFreeFunc valfree);
int function_cache_size(FunctionInfoTable *kv);
typedef void (* GTypeHashKeyFreeFunc)(GType x);
typedef void (* GTypeHashValFreeFunc)(SCM x);

typedef struct _GTypeItem
{
    GType key;
    SCM val;
} GTypeItem;

typedef struct _GTypeHash
{
    GTypeItem *entries;
    int len;
    int alloc;
} GTypeHash;

GTypeHash *gtype_hash_new(void);
SCM gtype_hash_find_entry(GTypeHash *kv, GType key);
void gtype_hash_add_entry(GTypeHash *kv, GType key, SCM val);
void gtype_hash_free(GTypeHash *kv, GTypeHashKeyFreeFunc keyfree, GTypeHashValFreeFunc valfree);
int gtype_hash_size(GTypeHash *kv);
typedef void (* ScmHashKeyFreeFunc)(SCM x);
typedef void (* ScmHashValFreeFunc)(GType x);

typedef struct _ScmItem
{
    SCM key;
    GType val;
} ScmItem;

typedef struct _ScmHash
{
    ScmItem *entries;
    int len;
    int alloc;
} ScmHash;

ScmHash *scm_hash_new(void);
GType scm_hash_find_entry(ScmHash *kv, SCM key);
void scm_hash_add_entry(ScmHash *kv, SCM key, GType val);
void scm_hash_free(ScmHash *kv, ScmHashKeyFreeFunc keyfree, ScmHashValFreeFunc valfree);
int scm_hash_size(ScmHash *kv);

#endif

